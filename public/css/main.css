@font-face {
  font-family: chronicle roman;
  src: url("fonts/chronicle/roman.otf") format('opentype');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: engravers regular;
  src: url("fonts/engravers/regular.ttf") format('truetype');
  font-weight: normal;
  font-style: normal;
}
@-moz-keyframes inFromTop {
  from {
    transform: translate(0, -10px);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@-webkit-keyframes inFromTop {
  from {
    transform: translate(0, -10px);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@-o-keyframes inFromTop {
  from {
    transform: translate(0, -10px);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@keyframes inFromTop {
  from {
    transform: translate(0, -10px);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@-moz-keyframes inFromBottom {
  from {
    transform: translate(0, 10px);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@-webkit-keyframes inFromBottom {
  from {
    transform: translate(0, 10px);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@-o-keyframes inFromBottom {
  from {
    transform: translate(0, 10px);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@keyframes inFromBottom {
  from {
    transform: translate(0, 10px);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@-moz-keyframes inFromRight {
  from {
    transform: translate(10px, 0);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@-webkit-keyframes inFromRight {
  from {
    transform: translate(10px, 0);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@-o-keyframes inFromRight {
  from {
    transform: translate(10px, 0);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@keyframes inFromRight {
  from {
    transform: translate(10px, 0);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@-moz-keyframes inFromLeft {
  from {
    transform: translate(-10px, 0);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@-webkit-keyframes inFromLeft {
  from {
    transform: translate(-10px, 0);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@-o-keyframes inFromLeft {
  from {
    transform: translate(-10px, 0);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
@keyframes inFromLeft {
  from {
    transform: translate(-10px, 0);
    opacity: 0;
  }
  to {
    transform: translate(0, 0);
    opacity: 1;
  }
}
.guide {
  padding: 20px 0 0 0;
  background-color: #fff;
}
.guide > .sections {
  padding: 20px;
}
.guide > .sections > .gsection {
  min-width: 200px;
  float: left;
}
.guide > .sections > .gsection > .title {
  font-family: chronicle roman;
  font-size: 16px;
  padding: 0 0 0 10px;
}
.guide > .sections > .gsection > .color {
  padding: 10px 20px;
  margin: 5px;
}
.guide > .sections > .gsection > .color.color_white1 {
  background-color: #fff;
  border: 1px solid #000;
  color: #000;
}
.guide > .sections > .gsection > .color.color_black1 {
  background-color: #000;
  border: 1px solid #fff;
  color: #fff;
}
.guide > .sections > .gsection > .color.color_gold1 {
  background-color: #ad986e;
  border: 1px solid #000;
  color: #000;
}
.guide > .sections > .gsection > .color.color_blue1 {
  background-color: #465062;
  border: 1px solid #fff;
  color: #fff;
}
.guide > .sections > .gsection > .color.color_grey1 {
  background-color: #aca39a;
  border: 1px solid #000;
  color: #000;
}
.guide > .sections > .gsection > .detail {
  padding: 0 0 0 20px;
  text-align: right;
}
.guide > .sections > .gsection > .font {
  padding: 0 20px;
  overflow-x: scroll;
}
.guide > .sections > .gsection > .font.font_h1 {
  font-family: chronicle roman;
  font-size: 40px;
}
.guide > .sections > .gsection > .font.font_h2 {
  font-family: chronicle roman;
  letter-spacing: 2px;
  font-size: 20px;
}
.guide > .sections > .gsection > .font.font_copy1 {
  font-family: chronicle roman;
  font-size: 16px;
}
.guide > .sections > .gsection > .font.font_copy2 {
  font-family: chronicle roman;
  font-size: 12px;
  letter-spacing: 2px;
}
.guide > .sections > .gsection > .font.font_copy3 {
  font-family: engravers regular;
  font-size: 20px;
}
.clear {
  zoom: 1;
}
.clear:before,
.clear:after {
  content: "";
  display: table;
}
.clear:after {
  clear: both;
}
body {
  background-color: #fff;
  font-family: chronicle roman;
  font-size: 16px;
  padding: 50px 10px 0 10px;
  margin: 0 10px 0 10px;
}
.container {
  max-width: 1200px;
  margin: auto;
  min-height: 200px;
  position: relative;
}
header > .logo {
  float: left;
  width: 202px;
  height: 46px;
}
header > .logo > svg > path {
  fill: #465062;
}
header .menu {
  width: 393px;
  float: right;
  margin: 0 50px 0 0;
  font-family: engravers regular;
  font-size: 20px;
}
header .menu > .item {
  display: inline-block;
  text-align: center;
  cursor: pointer;
  padding: 5px 10px;
}
header .menu > .item.on {
  color: #ad986e;
}
header .contact {
  float: right;
  font-family: chronicle roman;
  font-size: 12px;
  letter-spacing: 2px;
  color: #aca39a;
}
header .contact > .title,
header .contact > .address > .line,
header .contact > .email {
  margin: 0 0 5px 0;
}
header .contact > .email {
  width: 25px;
  height: 25px;
}
header .contact > .email > svg > path {
  fill: #aca39a;
}
header .socials {
  position: absolute;
  top: 100px;
  left: 10px;
}
header .socials > a.social {
  display: block;
  width: 25px;
  height: 25px;
  clear: both;
  margin: 0 0 10px 0;
}
header .socials > a.social > svg > path {
  fill: #aca39a;
  -webkit-transition: fill 0.1s linear 0s;
  -moz-transition: fill 0.1s linear 0s;
  -o-transition: fill 0.1s linear 0s;
  -ms-transition: fill 0.1s linear 0s;
  transition: fill 0.1s linear 0s;
}
header .socials > a.social:hover > svg > path {
  fill: #465062;
}
.page.home {
  min-height: 200px;
  margin: 0 0 0 90px;
}
.page.home > .title {
  font-family: chronicle roman;
  letter-spacing: 2px;
  font-size: 20px;
  text-transform: uppercase;
  color: #465062;
  margin: 0 0 60px 0;
}
.page.home > .tiles > .tile {
  display: block;
  position: relative;
  float: left;
  overflow: hidden;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  background-size: cover;
}
.page.home > .tiles > .tile > .image {
  background-color: rgba(70,80,98,0.5);
  -webkit-background-size: contain;
  -moz-background-size: contain;
  background-size: contain;
  width: inherit;
  height: inherit;
}
.page.home > .tiles > .tile > .hover {
  position: absolute;
  top: 0;
  left: 0;
  background-color: rgba(70,80,98,0.5);
  width: 100%;
  height: 100%;
  opacity: 0;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  filter: alpha(opacity=0);
  -webkit-transition: opacity 0.2s linear;
  -moz-transition: opacity 0.2s linear;
  -o-transition: opacity 0.2s linear;
  -ms-transition: opacity 0.2s linear;
  transition: opacity 0.2s linear;
}
.page.home > .tiles > .tile > .hover > .title {
  position: absolute;
  font-family: chronicle roman;
  letter-spacing: 2px;
  font-size: 20px;
  top: 50%;
  opacity: 0;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  filter: alpha(opacity=0);
  width: 100%;
  height: 24px;
  margin-top: -12px;
  text-align: center;
  color: #fff;
  letter-spacing: 4px;
  -webkit-transition: all 0.2s linear 0.1s;
  -moz-transition: all 0.2s linear 0.1s;
  -o-transition: all 0.2s linear 0.1s;
  -ms-transition: all 0.2s linear 0.1s;
  transition: all 0.2s linear 0.1s;
  -webkit-transform: scale(1.05);
  -moz-transform: scale(1.05);
  -o-transform: scale(1.05);
  -ms-transform: scale(1.05);
  transform: scale(1.05);
  text-transform: uppercase;
}
.page.home > .tiles > .tile:hover > .image,
.page.home > .tiles > .tile:hover > .hover {
  opacity: 1;
  -ms-filter: none;
  filter: none;
}
.page.home > .tiles > .tile:hover > .image > .title,
.page.home > .tiles > .tile:hover > .hover > .title {
  opacity: 1;
  -ms-filter: none;
  filter: none;
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -o-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}
.page.home > .tiles > .tile.tile_left {
  margin: 0 30px 30px 0;
}
.page.home > .tiles > .tile.tile_full {
  margin: 0 0 30px 0;
}
.page.home > .tiles > .tile.tile_fullsun {
  width: 626px;
  height: 444px;
  background-image: url("/images/tiles/home/FullSun_20x20px_1.jpg");
}
.page.home > .tiles > .tile.tile_fullsun > .image {
  background-image: url("/images/tiles/home/FullSun_626x444px_1.jpg");
}
.page.home > .tiles > .tile.tile_eldestilado > .image {
  width: 422px;
  height: 444px;
  background-image: url("/images/tiles/home/ElDestilado_422x444px_2.jpg");
}
.page.home > .tiles > .tile.tile_sufferfest > .image {
  width: 506px;
  height: 365px;
  background-image: url("/images/tiles/home/Sufferfest_506x365px_3.jpg");
}
.page.home > .tiles > .tile.tile_sumi > .image {
  width: 542px;
  height: 365px;
  background-image: url("/images/tiles/home/Sumi_542x365px_4.jpg");
}
.page.home > .tiles > .tile.tile_brownestate > .image {
  width: 1078px;
  height: 625px;
  background-image: url("/images/tiles/home/BrownEstate_1078x625px_5.jpg");
}
.page.home > .tiles > .tile.tile_viehealing > .image {
  width: 674px;
  height: 625px;
  background-image: url("/images/tiles/home/VieHealing_674x625px_6.jpg");
}
.page.home > .tiles > .tile.tile_fjordlife > .image {
  width: 374px;
  height: 624px;
  background-image: url("/images/tiles/home/Fjordlife_374x624px_7.jpg");
}
.page.home > .tiles > .tile.tile_goldpr > .image {
  width: 506px;
  height: 365px;
  background-image: url("/images/tiles/home/GoldPR_506x365px_8.jpg");
}
.page.home > .tiles > .tile.tile_urbankitchen > .image {
  width: 542px;
  height: 365px;
  background-image: url("/images/tiles/home/UrbanKitchen_542x365px_9.jpg");
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
